{"version":3,"sources":["webpack:///./src/application/Singers/index.jsx","webpack:///./src/application/Singers/singer.png","webpack:///./src/application/Singers/style.js","webpack:///./src/baseUI/horizen-item/index.jsx","webpack:///./src/baseUI/horizen-item/style.js","webpack:///./src/utils/EnterLoading.js"],"names":["Singers","props","scrollRef","useRef","category","alpha","songsCount","enterLoading","pullUpLoading","pullDownLoading","updateCategory","getHotSinger","updateAlpha","pullUpRefresh","pullDownRefresh","useEffect","handleUpdateCategory","key","handleUpdateAlpha","handlePullUp","handlePullDown","enterDetail","useCallback","id","history","push","renderSingerList","singersList","map","item","index","singerLazyLoadImg","picUrl","name","categoryTypes","alphaTypes","forceCheck","renderRoutes","route","routes","mapStateToProps","state","getIn","size","mapDispatchTProps","dispatch","changeCategory","getSingerList","changeAlpha","getHotSingerList","hotFlag","changePullUpLoading","refreshMoreHotSingerList","refreshMoreSingerList","changePullDownLoading","changeListOffset","connect","React","memo","NavContainer","Styled","div","ListContainer","play","List","style","ListItem","Horizen","useState","refreshCategoryScroll","setRefreshCategoryScroll","Category","categoryDOM","current","tagElems","querySelectorAll","totalWidth","Array","from","forEach","ele","offsetWidth","width","title","list","handleClick","currentKey","clickHandle","defaultProps","PropTypes","string","handleCLick","func","globalStyle","span","EnterLoading"],"mappings":"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","file":"5-a0e4b5c73d52aa885931.js","sourcesContent":["import React, { useEffect, useRef, useCallback } from 'react'\nimport { connect } from \"react-redux\"\nimport Horizen from \"baseUI/horizen-item\"\nimport { categoryTypes, alphaTypes } from \"api/config\"\nimport { NavContainer, ListContainer, List, ListItem } from \"./style\"\nimport { changeCategory, getHotSingerList, changeAlpha, getSingerList, changePullUpLoading, refreshMoreHotSingerList, changeListOffset, changePullDownLoading, refreshMoreSingerList } from \"./store/actionCreator\"\nimport Scroll from \"baseUI/scroll\"\nimport LazyLoad, { forceCheck } from \"react-lazyload\"\nimport singerLazyLoadImg from \"./singer.png\"\nimport Loading from \"baseUI/loading\"\nimport EnterLoading from \"utils/EnterLoading\"\nimport {renderRoutes} from \"react-router-config\"\nfunction Singers(props) {\n\n  const scrollRef = useRef(null);\n  const { category, alpha, songsCount, enterLoading, pullUpLoading, pullDownLoading } = props;\n  const { updateCategory, getHotSinger, updateAlpha, pullUpRefresh, pullDownRefresh } = props;\n  useEffect(() => {\n    if (!category) {\n      getHotSinger();\n    }\n  }, [])\n\n  /* \n    处理点击分类获取的key将这个key值重新放入props中然后通过这个值和分类列表的key进行比较保证点击的分类高亮显示\n  */\n  const handleUpdateCategory = (key) => {\n    // 如果key值和上次当前选中的值相等直接return不需要再次触发dispatch方法\n    if (category === key) {\n      return;\n    }\n    updateCategory(key);\n\n    //对应明星的数据加载功能为实现\n  }\n  const handleUpdateAlpha = (key) => {\n    // 如果是重复点击直接return\n    if (alpha === key) {\n      return;\n    }\n    updateAlpha(key);\n  }\n\n  /* \n    处理上拉加载更多\n  */\n  const handlePullUp = () => {\n    // 触发一个刷新的函数\n    pullUpRefresh(category === \"\" && alpha === \"\");\n  }\n\n  const handlePullDown = () => {\n    pullDownRefresh(category, alpha);\n  }\n\n  // 进入详情页面的函数\n  const enterDetail = useCallback((id) => {\n    props.history.push(`/singers/${id}`)\n  })\n  // 渲染歌手的数据\n  const renderSingerList = () => {\n    // 拿到歌手的数据\n    const { singersList } = props;\n\n    return (\n      <List>\n        {\n          singersList.map((item, index) => {\n            return (\n              <ListItem key={item.id} className=\"border-bottom\" onClick={() => enterDetail(item.id)}>\n                <div className=\"img_container\">\n                  <LazyLoad placeholder={<img src={singerLazyLoadImg} alt=\"歌手\" width=\"100%\" height=\"100%\" />}>\n                    <img src={`${item.picUrl}?param=300x300`} width=\"100%\" height=\"100%\" alt=\"歌手\" />\n                  </LazyLoad>\n                </div>\n                <span className=\"name\">{item.name}</span>\n              </ListItem>\n            )\n          })\n        }\n      </List>\n    )\n  }\n  return (\n    <>\n      <NavContainer>\n        <Horizen title={\"分类(默认热门):\"} handleClick={(key) => handleUpdateCategory(key)} list={categoryTypes} currentKey={category}></Horizen>\n        <Horizen title={\"首字母:\"} handleClick={(key) => handleUpdateAlpha(key)} list={alphaTypes} currentKey={alpha}></Horizen>\n      </NavContainer>\n      <ListContainer play={songsCount}>\n        <Scroll\n          onScroll={forceCheck}\n          ref={scrollRef}\n          pullUp={handlePullUp}\n          pullDown={handlePullDown}\n          pullUpLoading={pullUpLoading}\n          pullDownLoading={pullDownLoading}\n        >\n          {\n            renderSingerList()\n          }\n        </Scroll>\n      </ListContainer>\n      {enterLoading ? <EnterLoading><Loading></Loading></EnterLoading> : null}\n      {renderRoutes(props.route.routes)}\n    </>\n  )\n}\nconst mapStateToProps = state => ({\n  category: state.getIn([\"singers\", \"category\"]),\n  singersList: state.getIn([\"singers\", \"singersList\"]),\n  alpha: state.getIn([\"singers\", \"alpha\"]),\n  enterLoading: state.getIn([\"singers\", \"enterLoading\"]),\n  pullUpLoading: state.getIn([\"singers\", \"pullUpLoading\"]),\n  pullDownLoading: state.getIn([\"singers\", \"pullDownLoading\"]),\n  songsCount : state.getIn([\"player\", \"playList\"]).size\n})\nconst mapDispatchTProps = dispatch => ({\n  updateCategory(id) {\n    // 派发更新分类数据\n    dispatch(changeCategory(id));\n    // 重新派发获取对应分类的歌手的数据\n    dispatch(getSingerList());\n  },\n  updateAlpha(key) {\n    dispatch(changeAlpha(key));\n    dispatch(getSingerList());\n  },\n  getHotSinger() {\n    dispatch(getHotSingerList())\n  },\n  // 滑动的函数\n  pullUpRefresh(hotFlag) {\n    // 更新正在加载更多的动画标识\n    dispatch(changePullUpLoading(true));\n    // 通过判断是否为加载热门歌手还是分类歌手派发不同的方法\n    if (hotFlag) {\n      // 重新加载更多热门歌手数据\n      dispatch(refreshMoreHotSingerList());\n    } else {\n      dispatch(refreshMoreSingerList());\n    }\n  },\n  pullDownRefresh(category, alpha) {\n    dispatch(changePullDownLoading(true));\n    dispatch(changeListOffset(0));\n    if (category === \"\" && alpha === \"\") {\n      // 说明这是热门数据的刷新\n      dispatch(getHotSingerList());\n    } else {\n      // 否则说明含有分类和字母分类的数据刷新\n      dispatch(getSingerList());\n    }\n  }\n})\nexport default connect(mapStateToProps, mapDispatchTProps)(React.memo(Singers));","export default __webpack_public_path__ + \"images/singer-2681a7.png\";","import Styled from \"styled-components\"\nimport style from \"assets/global-style.js\"\nexport const NavContainer = Styled.div`\n  box-sizing: border-box;\n  position: fixed;\n  top: 95px;\n  width: 100%;\n  padding: 5px;\n  overflow: hidden;\n  display: flex;\n  flex-direction: column; \n`\n// ；歌手列表容器\nexport const ListContainer = Styled.div`\n  position: fixed;\n  top: 1.6rem;\n  left: 0;\n  bottom: ${props => props.play ? \".6rem\" : 0};\n  overflow: hidden;\n  width: 100%;\n`\nexport const List = Styled.div`\n  display : flex;\n  margin : auto;\n  flex-direction: column;\n  overflow: hidden;\n  .title {\n    margin:.1rem 0 .1rem .1rem;\n    color: ${style[\"font-color-desc\"]};\n    font-size: ${style[\"font-size-s\"]};\n  }\n`\nexport const ListItem = Styled.div`\n  display : flex;\n  box-sizing : border-box;\n  flex-direction : row;\n  margin : 0 .05rem;\n  padding : .05rem 0;\n  align-items : center;\n  border-bottom: 1px solid ${style[\"border-color\"]};\n  .img_container {\n    margin-right : .2rem;\n    img {\n      width : .5rem;\n      height : .5rem;\n      border-radius : .03rem;\n    }\n  }\n  .name {\n    font-weight: 500;\n    font-size : ${style[\"font-size-m\"]};\n    color : ${style[\"font-color-desc\"]}\n  }\n`","import React, { useEffect, useRef, memo, useState } from 'react'\nimport Scroll from \"../scroll\"\nimport { List, ListItem } from \"./style\"\nimport PropTypes from \"prop-types\"\n/* \n水平列表的ui组件\n*/\nfunction Horizen(props) {\n  // 因为第一次加载这个分类数据的时候呢我们的使用better-scroll的时候没有高度就无法进行滚动所以我们需要进行手动计算高度\n  const [refreshCategoryScroll, setRefreshCategoryScroll] = useState(false);\n\n  // 拿到这个bettrer-scroll作用的第一个元素的节点\n  const Category = useRef(null);\n  // 使用Effect的方法来计算分类出现的宽度问题 每次进行比对宽度\n  useEffect(() => {\n    // 拿到当前分类节点\n    let categoryDOM = Category.current;\n    // 获取他下面所有的span标签\n    let tagElems = categoryDOM.querySelectorAll(\"span\");\n    // 定义总宽度的变量\n    let totalWidth = 0;\n    // 通过数组的方法循环求和宽度\n    Array.from(tagElems).forEach(ele => {\n      totalWidth += ele.offsetWidth;\n    });\n    totalWidth += 2;\n    categoryDOM.style.width = `${totalWidth}px`;\n    // 然后将state之后的状态设置为true放置多次计算\n    setRefreshCategoryScroll(true);\n  }, [refreshCategoryScroll]);\n\n  const { title, list, handleClick, currentKey } = props;\n  const clickHandle = (item) => {\n    handleClick(item.key)\n  }\n  return (\n    <Scroll direction={\"horizental\"} refresh={true}>\n      <div ref={Category}>\n        <List>\n          <span>{title}</span>\n          {\n            list.map(item => (\n              <ListItem key={item.key}\n                onClick={() => clickHandle(item)}\n                className={ currentKey===item.key ? \"selected border\" : \"\"}\n              >\n                {item.name}\n              </ListItem>\n            ))\n          }\n        </List>\n      </div>\n    </Scroll>\n  )\n}\nHorizen.defaultProps = {\n  list: [],\n  handleClick: null,\n  title: \"\"\n}\nHorizen.PropTypes = {\n  list: PropTypes.Array,\n  title: PropTypes.string,\n  handleCLick: PropTypes.func\n}\nexport default memo(Horizen);","import Styled from \"styled-components\"\nimport globalStyle from \"assets/global-style\"\n\nexport const List = Styled.div`\n  display : flex;\n  align-items : center;\n  height : .3rem;\n  justify-content: center;\n  overflow: hidden;\n  >span:first-of-type{\n    display: block;\n    flex: 0 0 auto;\n    padding: .05rem 0;\n    color: grey;\n    font-size: ${globalStyle[\"font-size-m\"]};\n    vertical-align: middle;\n  }\n`\nexport const ListItem = Styled.span`\n  flex: 0 0 auto;\n  font-size: ${globalStyle[\"font-size-m\"]};\n  padding: .05rem .05rem;\n  border-radius: .1rem;\n  &.selected{\n    color: ${globalStyle[\"theme-color\"]};\n    border: 1px solid ${globalStyle[\"theme-color\"]};\n    opacity: 0.8;\n  }\n  &:before{\n    border: none;\n  }\n`","import Styled from \"styled-components\"\nimport React from \"react\"\nconst EnterLoading = Styled.div`\n    position: fixed;\n    left: 0; right: 0; top: 0; bottom: 0;\n    width: 1rem;\n    height: 1rem;\n    margin: auto;\n`\nexport default React.memo(EnterLoading)"],"sourceRoot":""}