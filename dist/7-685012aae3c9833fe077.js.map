{"version":3,"sources":["webpack:///./src/application/Rank/index.jsx","webpack:///./src/application/Rank/style.js","webpack:///./src/utils/EnterLoading.js"],"names":["Rank","props","rankList","loading","getRankListDispatch","useEffect","length","enterDetail","id","history","push","renderSongList","list","map","item","index","first","second","renderRankList","global","tracks","coverImgUrl","updateFrequency","globalStartIndex","filterIndex","officalList","slice","globalList","renderRoutes","route","routes","mapStateToProps","state","getIn","mapStateToDispatch","dispatch","getRankList","connect","React","memo","Container","Styled","div","play","style","List","ul","globalRank","ListItem","li","SongList","EnterLoading"],"mappings":"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","file":"7-685012aae3c9833fe077.js","sourcesContent":["import React, { useEffect } from 'react'\nimport { Container, List, SongList, ListItem } from \"./style\"\nimport Scroll from \"baseUI/scroll\"\nimport { connect } from \"react-redux\"\nimport { getRankList } from \"./store/actionCreator\"\nimport { filterIndex } from \"utils\"\nimport Loading from \"baseUI/loading\"\nimport EnterLoading from \"utils/EnterLoading\"\nimport {renderRoutes} from \"react-router-config\"\nfunction Rank(props) {\n  const { rankList, loading } = props;\n  const { getRankListDispatch } = props;\n  useEffect(() => {\n    if (!rankList.length) {\n      getRankListDispatch();\n    }\n  }, []);\n  const enterDetail = (id) => {\n    props.history.push(`/rank/${id}`);\n  }\n  const renderSongList = (list) => {\n    return list.length !== 0 && (\n      <SongList>\n        {\n          list.map((item, index) => {\n            return (\n              <li key={index}>{index + 1}. {item.first} {item.second}</li>\n            )\n          })\n        }\n      </SongList>\n    )\n  }\n\n  const renderRankList = (list, global) => {\n    return (\n      <List globalRank={global}>\n        {\n          list.map(item => (\n            <ListItem key={item.id} className=\"border-bottom\" onClick={() => enterDetail(item.id)} tracks={item.tracks}>\n              <div className=\"img_wrapper\">\n                <img src={item.coverImgUrl} alt=\"\" />\n                <div className=\"decorate\"></div>\n                <span className=\"update_frequecy\">{item.updateFrequency}</span>\n              </div>\n              {renderSongList(item.tracks)}\n            </ListItem>\n          ))\n        }\n      </List>\n    )\n  }\n\n  // 需要对rankList的数据进行一次处理先拿到官方榜的数据需要过滤数据拿到对象的index下标在进行slice\n  let globalStartIndex = filterIndex(rankList);\n  // 官方榜的数据\n  let officalList = rankList.slice(0, globalStartIndex);\n  // 全球榜的数据\n  let globalList = rankList.slice(globalStartIndex)\n  return (\n    <Container>\n      <Scroll>\n        <div>\n          <h2 className=\"offical\">官方榜</h2>\n          {renderRankList(officalList)}\n          <h2 className=\"global\">全球榜</h2>\n          {renderRankList(globalList, true)}\n          {/* 判断是否载入动画 */}\n          {loading ? <EnterLoading><Loading></Loading></EnterLoading> : null}\n        </div>\n      </Scroll>\n      {renderRoutes(props.route.routes)}\n\n    </Container>\n  )\n}\nconst mapStateToProps = state => ({\n  rankList: state.getIn([\"rank\", \"rankList\"]),\n  loading: state.getIn([\"rank\", \"loading\"])\n})\nconst mapStateToDispatch = (dispatch) => ({\n  getRankListDispatch() {\n    dispatch(getRankList())\n  }\n})\nexport default connect(mapStateToProps, mapStateToDispatch)(React.memo(Rank));\n","import Styled from \"styled-components\"\nimport style from \"assets/global-style\"\nexport const Container = Styled.div`\n  position: fixed;\n  top: .94rem;\n  bottom: ${props => props.play > 0 ? \".6rem\" : 0};\n  width: 100%;\n  .offical,.global {\n    margin: .1rem .05rem;\n    padding-top : .15rem;\n    font-weight: 700;\n    font-size: ${style[\"font-size-m\"]};\n    color: ${style[\"font-color-desc\"]};\n  }\n`\nexport const List = Styled.ul`\n  margin-top : .1rem;\n  display : ${props => props.globalRank ? \"flex\" : \"\"};\n  padding : 0 .05rem;\n  flex-direction : row;\n  flex-wrap : wrap;\n  background: ${style[\"background-color\"]};\n  justify-content : space-between;\n  &::after{\n    content:\"\";\n    display:block;\n    width: 1.2rem\n  }\n`\nexport const ListItem = Styled.li`\n/* 通过判断是否存在歌曲信息设置是否为弹性盒子 */\n  display : ${props => props.tracks.length ? \"flex\" : \"\"};\n  padding .03rem 0;\n  border-bottom : 1px solid ${style[\"border-color\"]};\n  .img_wrapper {\n    width:  ${props => props.tracks.length ? \"1rem\" : \"1.2rem\"};\n    height: ${props => props.tracks.length ? \"1rem\" : \"1.2rem\"};\n    position : relative;\n    img {\n      width: 100%;\n      height: 100%;\n      border-radius : .03rem;\n    }\n    .decorate {\n      position: absolute;\n      bottom: 0;\n      width: 100%;\n      height: .35rem;\n      border-radius: .03rem;\n      background: linear-gradient(hsla(0,0%,100%,0),hsla(0,0%,43%,.4));\n    }\n    .update_frequecy{\n      position : absolute;\n      left: .07rem;\n      bottom: .07rem;\n      font-size: ${style[\"font-size-ss\"]};\n      color: ${style[\"font-color-light\"]};\n    }\n  }\n`\nexport const SongList = Styled.ul`\n  display: flex;\n  flex : 1;\n  padding : .1rem .1rem;\n  flex-direction : column;\n  justify-content: space-around;\n  li {\n    font-size: .12rem;\n    color: grey;\n  }\n`","import Styled from \"styled-components\"\nimport React from \"react\"\nconst EnterLoading = Styled.div`\n    position: fixed;\n    left: 0; right: 0; top: 0; bottom: 0;\n    width: 1rem;\n    height: 1rem;\n    margin: auto;\n`\nexport default React.memo(EnterLoading)"],"sourceRoot":""}